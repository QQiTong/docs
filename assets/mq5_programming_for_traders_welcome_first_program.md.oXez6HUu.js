import{_ as s,c as a,aI as e,o as l}from"./chunks/framework.b7dag8kZ.js";const t="/images/mq5_programming_for_traders/MQL5-Programming-for-Traders-5-1.png",c=JSON.parse('{"title":"第一个程序","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/mq5_programming_for_traders/welcome/first_program"}],["meta",{"property":"og:title","content":"第一个程序"}]]},"headers":[],"relativePath":"mq5_programming_for_traders/welcome/first_program.md","filePath":"mq5_programming_for_traders/welcome/first_program.md","lastUpdated":1745411614000}'),n={name:"mq5_programming_for_traders/welcome/first_program.md"};function h(p,i,r,o,k,d){return l(),a("div",null,i[0]||(i[0]=[e(`<h1 id="第一个程序" tabindex="-1">第一个程序 <a class="header-anchor" href="#第一个程序" aria-label="Permalink to &quot;第一个程序&quot;">​</a></h1><p>让我们尝试在脚本中添加一些简单但能说明问题的内容来演示其操作。将修改后的脚本重命名为<code>HelloChart.mq5</code>。</p><p>在许多编程教科书中，初始示例都会打印神圣的&quot;Hello, world&quot;。在MQL5中，类似的问候可以这样实现：</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>但我们将其做得更具信息量：</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="代码解析" tabindex="-1">代码解析 <a class="header-anchor" href="#代码解析" aria-label="Permalink to &quot;代码解析&quot;">​</a></h2><ul><li><p><strong><code>Print</code>函数</strong>：</p><ul><li>MQL5终端内置函数</li><li>用于在&quot;EA交易&quot;日志中显示消息（通过<code>工具 &gt; EA交易</code>窗口查看）</li><li>支持多个参数，用逗号分隔</li></ul></li><li><p><strong><code>Symbol()</code>函数</strong>：</p><ul><li>无参数函数</li><li>返回当前图表交易品种名称（如EURUSD）</li><li>动态替换为当前图表品种</li></ul></li></ul><h2 id="执行效果示例" tabindex="-1">执行效果示例 <a class="header-anchor" href="#执行效果示例" aria-label="Permalink to &quot;执行效果示例&quot;">​</a></h2><p>当在EURUSD图表运行脚本时：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>HelloChart (EURUSD,H1)        Hello, EURUSD</span></span></code></pre></div><h2 id="语法要点" tabindex="-1">语法要点 <a class="header-anchor" href="#语法要点" aria-label="Permalink to &quot;语法要点&quot;">​</a></h2><ol><li><p><strong>字符串字面量</strong>：</p><ul><li>使用双引号包裹固定字符序列</li><li>示例中的<code>&quot;Hello, &quot;</code>包含逗号会原样输出</li></ul></li><li><p><strong>参数分隔符</strong>：</p><ul><li>函数参数间的逗号是语法分隔符</li><li>缺少参数分隔符会导致编译错误</li></ul></li></ol><h2 id="常见错误示例" tabindex="-1">常见错误示例 <a class="header-anchor" href="#常见错误示例" aria-label="Permalink to &quot;常见错误示例&quot;">​</a></h2><h3 id="缺失分号错误" tabindex="-1">缺失分号错误 <a class="header-anchor" href="#缺失分号错误" aria-label="Permalink to &quot;缺失分号错误&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 缺少分号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="`+t+`" alt=""></p><p><strong>编译错误</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>&#39;}&#39; - semicolon expected        HelloChart.mq5        17        1</span></span>
<span class="line"><span>&#39;}&#39; - unexpected end of program HelloChart.mq5        17        1</span></span></code></pre></div><h3 id="参数分隔符错误" tabindex="-1">参数分隔符错误 <a class="header-anchor" href="#参数分隔符错误" aria-label="Permalink to &quot;参数分隔符错误&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 缺少参数逗号</span></span></code></pre></div><p><strong>编译错误</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>&#39;Symbol&#39; - some operator expected HelloChart.mq5 16 19</span></span></code></pre></div><h2 id="重要结论" tabindex="-1">重要结论 <a class="header-anchor" href="#重要结论" aria-label="Permalink to &quot;重要结论&quot;">​</a></h2><ol><li>严格遵循语言语法规则</li><li>相同符号在不同上下文中作用不同（如字符串逗号vs参数逗号）</li><li>分号是语句结束的强制要求</li><li>动态函数调用（如Symbol()）会在运行时解析值</li></ol><h2 id="执行验证" tabindex="-1">执行验证 <a class="header-anchor" href="#执行验证" aria-label="Permalink to &quot;执行验证&quot;">​</a></h2><p>脚本执行后：</p><ul><li>在&quot;EA交易&quot;日志中立即显示结果</li><li>脚本执行后自动从图表移除</li><li>日志记录保留执行信息</li></ul><p>通过这个简单示例，展示了MQL5的基本函数调用、参数传递和语法规范的重要性。</p>`,29)]))}const E=s(n,[["render",h]]);export{c as __pageData,E as default};
