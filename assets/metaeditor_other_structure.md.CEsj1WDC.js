import{_ as e}from"./chunks/open_data_folder_icon.BrZrbuwZ.js";import{_ as a,c as r,ag as d,o as i}from"./chunks/framework.CCnnzLsu.js";const s="/metaeditor/navigator_structure.png",k=JSON.parse('{"title":"MetaEditor 环境文件夹","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/metaeditor/other/structure"}],["meta",{"property":"og:title","content":"MetaEditor 环境文件夹"}]]},"headers":[],"relativePath":"metaeditor/other/structure.md","filePath":"metaeditor/other/structure.md","lastUpdated":1744293048000}'),o={name:"metaeditor/other/structure.md"};function l(n,t,p,h,c,m){return i(),r("div",null,t[0]||(t[0]=[d('<h1 id="metaeditor-环境文件夹" tabindex="-1">MetaEditor 环境文件夹 <a class="header-anchor" href="#metaeditor-环境文件夹" aria-label="Permalink to &quot;MetaEditor 环境文件夹&quot;">​</a></h1><p>在开发交易应用程序之前，用户需要了解交易平台和 MetaEditor 中的数据存储原理。</p><p>MetaEditor 环境中算法交易（成品程序）和应用程序开发的所有文件都位于交易平台的 /MQL5（/MQL4）目录中。 若要快速跳转到它们，请点击<img src="'+e+'" alt="打开数据文件夹"> 打开数据文件夹位于 <a href="/metaeditor/main_menu/main_menu_file#data_folder">文件</a> 菜单。 目录位置相对于平台安装文件夹，这要取决于 <a href="/metaeditor/welcome/open">MetaEditor 启动模式</a>。</p><p>/MQL5（/MQL4）目录中的文件依据其目的和应用程序类型而定位:</p><table tabindex="0"><thead><tr><th>文件夹和文件</th><th>描述</th></tr></thead><tbody><tr><td>/Experts</td><td>文件夹保存编译的 (*.ex5, <em>.ex4) 和 EA (</em>.mq5, *.mqh, *.mq4) 的源文件。</td></tr><tr><td>/Files</td><td>文件夹保存 EA 和脚本使用的各种文件。</td></tr><tr><td>/Images</td><td>文件夹保存程序中使用的 *.bmp 图像。</td></tr><tr><td>/Include</td><td>文件夹保存各种程序中包含的公共 *.mqh 文件。</td></tr><tr><td>/Indicators</td><td>文件夹保存自定义指标的编译文件和源文件。</td></tr><tr><td>/Libraries</td><td>文件夹保存 MQL5/MQL4 函数库。</td></tr><tr><td>/Logs</td><td>包括智能交易系统日志文件（yyyymmdd.log）。 这些记录 EA 操作的文件每天会单独创建，它们的名称与创建日期相对应: yyyy 代表 年份, mm ― 月份, dd ― 日期.</td></tr><tr><td>/Presets</td><td>该文件夹保存启动 EA（输入参数）的参数集。</td></tr><tr><td>/Scripts</td><td>文件夹保存脚本编译文件和源文件。</td></tr><tr><td>/Shared Projects</td><td>文件夹保存 <a href="/metaeditor/mql5storage/projects#shared">共享项目</a>。</td></tr><tr><td>experts.dat</td><td>包含 EA 数据库。</td></tr><tr><td>mql5.storage</td><td><a href="/metaeditor/mql5storage/">MQL5 存储</a> 服务数据。</td></tr></tbody></table><h2 id="mql4-mql5-应用文件结构" tabindex="-1">MQL4/MQL5 应用文件结构 <a class="header-anchor" href="#mql4-mql5-应用文件结构" aria-label="Permalink to &quot;MQL4/MQL5 应用文件结构&quot;">​</a></h2><p>在开发 MQL4/MQL5 应用程序时应该仔细安排这些文件。 正确安排文件极大地简化了大型项目的工作。</p><p>如果您开发交易机器人，请在 Experts 目录中为其创建单独的文件夹。 对于指标 ― 在 Indicatоrs 目录, 对于脚本 ― 在 Scripts, 等等。 除了公共文件（标准库，共享包含文件），请将所有开发应用程序的文件放置在相应的文件夹中。</p><p>管理应用程序结构可在 <a href="/metaeditor/workspace/navigator">导航器</a> 窗口进行。</p><p><img src="'+s+'" alt="导航器窗口中的文件结构"></p><h2 id="创建文件夹并放置文件" tabindex="-1">创建文件夹并放置文件 <a class="header-anchor" href="#创建文件夹并放置文件" aria-label="Permalink to &quot;创建文件夹并放置文件&quot;">​</a></h2><p>若要创建文件夹，请使用操作系统浏览器或 <a href="/metaeditor/workspace/navigator">导航器</a> 窗口。 若要通过导航器创建子目录，请选择必要的文件夹，然后在关联菜单中单击 &quot;新建文件夹&quot;。 接下来，设置文件夹名称并按回车键。 若要将文件移动到已创建的文件夹，只需将它拖拽过去（Drag&#39;n&#39;Drop）。</p><h2 id="文件安排" tabindex="-1">文件安排 <a class="header-anchor" href="#文件安排" aria-label="Permalink to &quot;文件安排&quot;">​</a></h2><p>在 <a href="/metaeditor/development/compile">编译</a> 期间，可执行程序文件 (*.EX4 或 <em>.EX5) 与程序主体源代码文件 (</em>.MQ4 或 *.MQ5) 或 <a href="/metaeditor/mql5storage/projects">项目</a> 文件 (MQPROJ) 创建在同一目录。 主体文件是一个包含所谓入口点的 MQ4 或 MQ5 文件 ― 预定义函数初始化应用程序操作（例如: OnInit，OnStart，OnChartEvent，等等）。 主体文件可能包含其它 MQ4、MQ5 和 MQH 文件，尽管它是要被编译并创建可执行程序文件的主体文件。</p><p>当您在程序代码中包含它们（*.MQH）时要考虑到文件位置。 如果包含文件与主体文件位于相同的文件夹中，请使用以下语句:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>#include &quot;文件名.mqh&quot;</span></span></code></pre></div><p>如果该文件位于标准的 Include 目录中:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>#include &lt;文件名.mqh&gt;</span></span></code></pre></div><p>您还可以指定文件的相对路径:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>#include &quot;../文件夹名/文件名.mqh&quot;</span></span></code></pre></div><ul><li>通过操作系统浏览器对目录和文件结构进行的所有更改都将自动显示在 &quot;导航器&quot; 窗口中。 如果出于某种原因，这些更改不能立即显示，请在导航器的关联菜单中运行 <a href="/metaeditor/workspace/navigator#refresh">刷新</a> 命令或按 F5。</li><li>若要创建可执行程序文件，请编译其主体源文件。 这是一个包含入口点的文件 ― 用于初始化应用程序操作的预定义函数（例如: OnInit，OnStart，OnChartEvent，等等）。</li></ul>',21)]))}const b=a(o,[["render",l]]);export{k as __pageData,b as default};
