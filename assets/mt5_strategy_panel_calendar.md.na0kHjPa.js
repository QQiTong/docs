import{_ as i,c as a,aI as n,o as t}from"./chunks/framework.b7dag8kZ.js";const o=JSON.parse('{"title":"交易拓展-财经日历-利用新闻事件辅助交易","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/mt5_strategy/panel_calendar"}],["meta",{"property":"og:title","content":"交易拓展-财经日历-利用新闻事件辅助交易"}]]},"headers":[],"relativePath":"mt5_strategy/panel_calendar.md","filePath":"mt5_strategy/panel_calendar.md","lastUpdated":null}'),l={name:"mt5_strategy/panel_calendar.md"};function e(h,s,k,p,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="交易拓展-财经日历-利用新闻事件辅助交易" tabindex="-1">交易拓展-财经日历-利用新闻事件辅助交易 <a class="header-anchor" href="#交易拓展-财经日历-利用新闻事件辅助交易" aria-label="Permalink to &quot;交易拓展-财经日历-利用新闻事件辅助交易&quot;">​</a></h1><p>2025年04月17日 21:46</p><p>Hello，大家好，今天借着讲解财经日历这个EA，我们创建一个新系列。我会把一些平时开发过程中遇到的、大家可能感兴趣或有用的功能分享出来，可能是一个EA、工具、脚本或指标，内容会比较繁杂，这个系列取名为<strong>交易拓展</strong>。它是对现有知识体系的补充，建议大家看完其他内容后再观看这个系列。</p><p>在开始今天的内容前，先说明一下：用户的行为和信息平台都能获取，大家不要做出令彼此尴尬的事情。我最初参加工作时做过类似电影、电视剧复原的工作，所以请大家不要有出格行为。</p><p>今天分享的财经日历工具在公开内容中讲过，我会提供公开视频地址和截图，不了解或忘记的同学可以去查看。今天我们详细剖析这个工具，分析功能的具体实现，理解后可以将需要的方法和功能融合到自己的EA中。</p><h2 id="工具功能概述" tabindex="-1">工具功能概述 <a class="header-anchor" href="#工具功能概述" aria-label="Permalink to &quot;工具功能概述&quot;">​</a></h2><p>目前工具主要功能分为三部分，我会分成三个视频讲解：</p><ol><li><strong>获取新闻事件</strong>：学习如何过滤新闻事件或利用新闻创建交易策略。</li><li><strong>展示新闻事件面板</strong>：涉及图形化界面创建、分页功能实现，使用数组和结构体，适合编程基础薄弱的同学。</li><li><strong>交互性事件在MT5中的应用</strong>：讲解鼠标移动、点击等事件，适合想开发用户友好界面的开发者，最后介绍DLL动态连接库的应用场景。</li></ol><h2 id="第一部分-获取新闻事件" tabindex="-1">第一部分：获取新闻事件 <a class="header-anchor" href="#第一部分-获取新闻事件" aria-label="Permalink to &quot;第一部分：获取新闻事件&quot;">​</a></h2><h3 id="_1-输入参数与全局变量" tabindex="-1">1. 输入参数与全局变量 <a class="header-anchor" href="#_1-输入参数与全局变量" aria-label="Permalink to &quot;1. 输入参数与全局变量&quot;">​</a></h3><ul><li><strong>输入参数</strong>：具体含义和功能在公开视频中详细讲解，此处略过。</li><li><strong>全局变量</strong>： <ul><li><code>current_page</code>：记录当前页面，用于分页功能（数值1、2、3、4）。</li><li><code>event_struct</code>：结构体，存储新闻事件信息（时间、名称、重要性、货币、实际值、预测值、前值等）。</li><li><code>events</code>：存储所有新闻事件的结构体数组，用于显示面板。</li><li><code>columns</code>：定义列名（如“影响”“前值”）的字符串数组。</li><li>常量：记录位置、尺寸等数据。</li></ul></li></ul><h3 id="_2-oninit-方法" tabindex="-1">2. <code>OnInit()</code>方法 <a class="header-anchor" href="#_2-oninit-方法" aria-label="Permalink to &quot;2. \`OnInit()\`方法&quot;">​</a></h3><ul><li>启用鼠标移动事件监测：<code>ChartSetInteger(CHART_EVENT_MOUSE_MOVE, true)</code>，否则无法监测鼠标移动事件。</li><li>调用获取新闻事件和显示面板的方法，通过<code>OnTimer()</code>定时器定时刷新数据。</li></ul><h3 id="_3-selecteventnews-方法-核心逻辑" tabindex="-1">3. <code>SelectEventNews()</code>方法（核心逻辑） <a class="header-anchor" href="#_3-selecteventnews-方法-核心逻辑" aria-label="Permalink to &quot;3. \`SelectEventNews()\`方法（核心逻辑）&quot;">​</a></h3><h4 id="_1-清理数据与初始化" tabindex="-1">（1）清理数据与初始化 <a class="header-anchor" href="#_1-清理数据与初始化" aria-label="Permalink to &quot;（1）清理数据与初始化&quot;">​</a></h4><ul><li>清空<code>events</code>数组，避免旧数据干扰。</li><li>定义<code>start_time</code>（当天凌晨）和<code>end_time</code>（当前时间+30天），限定新闻获取时间范围。</li></ul><h4 id="_2-调用mql5接口获取经济日历数据" tabindex="-1">（2）调用MQL5接口获取经济日历数据 <a class="header-anchor" href="#_2-调用mql5接口获取经济日历数据" aria-label="Permalink to &quot;（2）调用MQL5接口获取经济日历数据&quot;">​</a></h4><ul><li>使用<code>CandleValueHistory</code>方法，传入时间范围、存储数组、国家代码和货币代码（货币代码通过自定义逻辑判断，而非直接输入）。</li></ul><h4 id="_3-过滤与封装新闻事件" tabindex="-1">（3）过滤与封装新闻事件 <a class="header-anchor" href="#_3-过滤与封装新闻事件" aria-label="Permalink to &quot;（3）过滤与封装新闻事件&quot;">​</a></h4><ul><li><strong>重要性过滤</strong>：根据用户设置（如忽略低重要性新闻），使用<code>continue</code>跳过不符合条件的事件。</li><li><strong>封装结构体</strong>：从返回数据中提取时间、名称、重要性、货币、数值（实际值、预测值、前值）、URL等信息，封装到<code>event_struct</code>对象中。 <ul><li><strong>URL处理</strong>：通过分析MT5网页参数构造跳转链接（需注意网页结构变化可能导致链接失效）。</li></ul></li></ul><h4 id="_4-货币过滤逻辑" tabindex="-1">（4）货币过滤逻辑 <a class="header-anchor" href="#_4-货币过滤逻辑" aria-label="Permalink to &quot;（4）货币过滤逻辑&quot;">​</a></h4><ul><li><strong>全部货币（A）</strong>：不过滤，直接显示。</li><li><strong>当前品种货币（C）</strong>：提取当前图表品种的货币（如“欧美”对应欧元和美元），通过<code>StringFind</code>判断新闻事件货币是否包含其中。</li><li><strong>自定义货币</strong>：将用户输入的货币字符串按“|”分割，遍历判断是否符合条件。</li></ul><h4 id="_5-绘制时间线与数据存储" tabindex="-1">（5）绘制时间线与数据存储 <a class="header-anchor" href="#_5-绘制时间线与数据存储" aria-label="Permalink to &quot;（5）绘制时间线与数据存储&quot;">​</a></h4><ul><li>使用<code>ObjectCreate</code>绘制垂直时间线，设置提示信息（Tips）、颜色和宽度。</li><li>将封装好的<code>event_struct</code>对象添加到<code>events</code>数组中。</li></ul><h4 id="_6-数据排序" tabindex="-1">（6）数据排序 <a class="header-anchor" href="#_6-数据排序" aria-label="Permalink to &quot;（6）数据排序&quot;">​</a></h4><ul><li>使用冒泡排序对<code>events</code>数组按时间排序，确保事件按先后顺序显示。</li></ul><h3 id="_4-功能应用建议" tabindex="-1">4. 功能应用建议 <a class="header-anchor" href="#_4-功能应用建议" aria-label="Permalink to &quot;4. 功能应用建议&quot;">​</a></h3><p>可将新闻事件获取逻辑融入EA，例如在<code>OnTick()</code>中判断当前时间是否临近新闻公布时间，执行暂停交易、提前平仓或突破策略等操作，灵活应用于交易策略。</p><p>以上是第一部分内容，后续会讲解新闻事件面板展示和交互性事件应用。感谢观看！</p><p><strong>代码示例（关键逻辑片段）</strong>：</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 清空旧数据  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ArraySetAsFree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(events);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">events </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event_struct[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 时间范围计算  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datetime start_time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TimeDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeYear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeMonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeDay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datetime end_time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start_time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DAY;  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 过滤重要性  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show_low_importance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event_importance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IMPORTANCE_LOW)  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 封装结构体  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">event_struct event;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">event.time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event_time;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">event.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event_name;  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 其他字段赋值...  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 冒泡排序  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ArraySize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(events) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ArraySize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(events) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (events[j].time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> events[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].time) {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            event_struct temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> events[j];  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            events[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> events[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            events[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>（注：代码为简化示意，实际需结合MT5官方文档和完整工程调试。）</p>`,32)]))}const g=i(l,[["render",e]]);export{o as __pageData,g as default};
