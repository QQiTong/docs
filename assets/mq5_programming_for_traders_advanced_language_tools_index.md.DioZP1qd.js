import{_ as r,c as t,j as e,a as n,o}from"./chunks/framework.CCnnzLsu.js";const g=JSON.parse('{"title":"MQL5 高级工具","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/mq5_programming_for_traders/advanced_language_tools/"}],["meta",{"property":"og:title","content":"MQL5 高级工具"}]]},"headers":[],"relativePath":"mq5_programming_for_traders/advanced_language_tools/index.md","filePath":"mq5_programming_for_traders/advanced_language_tools/index.md","lastUpdated":1744387121000}'),l={name:"mq5_programming_for_traders/advanced_language_tools/index.md"};function d(s,a,_,i,m,p){return o(),t("div",null,a[0]||(a[0]=[e("h1",{id:"mql5-高级工具",tabindex:"-1"},[n("MQL5 高级工具 "),e("a",{class:"header-anchor",href:"#mql5-高级工具","aria-label":'Permalink to "MQL5 高级工具"'},"​")],-1),e("p",null,"在本书的这一部分，我们将了解 MQL5 API 在不同领域的其他功能特性，这些功能在为 MetaTrader 5 环境开发程序时可能会用到。其中一些功能具有实际交易应用的性质，例如自定义金融工具或内置的经济日历。其他功能则是通用技术，在各个方面都可能派上用场，比如网络功能、数据库、密码学等等。",-1),e("p",null,"此外，我们还将探讨如何使用资源来扩展 MQL 程序。这些资源是任意类型的文件，可以嵌入到代码中，其中包含多媒体内容、来自外部程序的 “复杂” 设置（例如，现成的机器学习模型或神经网络配置），或者是编译形式的其他 MQL 程序（指标）。",-1),e("p",null,"有几个章节将专门介绍 MQL 程序的模块化开发。在此背景下，我们将探讨一种特殊的程序类型——库。库可以连接到其他 MQL 程序，以封闭形式提供现成的特定 API 集合，但不能独立使用。我们还将探索组织软件开发综合体流程的可能性，以及将逻辑上相关的程序组合成项目的方法。",-1),e("p",null,"最后，我们将介绍与其他软件环境的集成，特别是与 Python 的集成。",-1),e("p",null,"本书不会涵盖一些可能会引起高级用户兴趣的高度专业化的主题，例如使用 OpenCL 进行并行计算的硬件功能，以及基于 DirectX 的 2D 和 3D 图形技术。建议您通过 mql5.com 网站上的文档和文章来熟悉这些技术。",-1)]))}const f=r(l,[["render",d]]);export{g as __pageData,f as default};
