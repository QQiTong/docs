import{_ as i,c as a,aI as t,o as n}from"./chunks/framework.b7dag8kZ.js";const o=JSON.parse('{"title":"3种表达式","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/mt5_quick_start/basic_grammar/expression"}],["meta",{"property":"og:title","content":"3种表达式"}]]},"headers":[],"relativePath":"mt5_quick_start/basic_grammar/expression.md","filePath":"mt5_quick_start/basic_grammar/expression.md","lastUpdated":1745411614000}'),h={name:"mt5_quick_start/basic_grammar/expression.md"};function l(k,s,p,e,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="_3种表达式" tabindex="-1">3种表达式 <a class="header-anchor" href="#_3种表达式" aria-label="Permalink to &quot;3种表达式&quot;">​</a></h1><p>这三种表达式是编写策略逻辑的核心工具，需结合案例熟练掌握。</p><h2 id="一、算术表达式" tabindex="-1">一、算术表达式 <a class="header-anchor" href="#一、算术表达式" aria-label="Permalink to &quot;一、算术表达式&quot;">​</a></h2><p><strong>作用</strong>：执行加减乘除等数学运算，返回数值结果。<br><strong>核心运算符</strong>：</p><table tabindex="0"><thead><tr><th>运算符</th><th>含义</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td><code>+</code></td><td>加法</td><td><code>35 + 45</code></td><td><code>80</code></td></tr><tr><td><code>-</code></td><td>减法</td><td><code>35 - 45</code></td><td><code>-10</code></td></tr><tr><td><code>*</code></td><td>乘法</td><td><code>35 * 45</code></td><td><code>1575</code></td></tr><tr><td><code>/</code></td><td>除法</td><td><code>35.0 / 45.0</code></td><td><code>0.777...</code></td></tr></tbody></table><p><strong>代码示例</strong>：</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnInit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentRSI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 当前RSI值（整型）  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prevRSI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 前一根RSI值（整型）  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 加法：计算RSI和  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentRSI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prevRSI;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;RSI和：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sum);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：80  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 减法：计算RSI差值  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentRSI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prevRSI;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;RSI差：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, diff);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：-10  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 乘法：计算乘积  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentRSI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prevRSI;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;RSI乘积：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, product);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：1575  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 除法：计算比值（需用浮点型接收）  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ratio </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)currentRSI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prevRSI;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;RSI比值：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ratio);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：0.777777...  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>注意事项</strong>：</p><ol><li><strong>类型转换</strong>：整数相除需用<code>double</code>强制转换（如<code>(double)a / b</code>），避免精度丢失（<code>int</code>相除会截断小数）。</li><li><strong>运算符优先级</strong>：遵循数学规则（乘除优先于加减），可通过括号改变优先级（如<code>(a + b) * c</code>）。</li></ol><h2 id="二、关系表达式" tabindex="-1">二、关系表达式 <a class="header-anchor" href="#二、关系表达式" aria-label="Permalink to &quot;二、关系表达式&quot;">​</a></h2><p><strong>作用</strong>：比较两个值的关系，返回布尔值（<code>true</code>/<code>false</code>）。<br><strong>核心运算符</strong>：</p><table tabindex="0"><thead><tr><th>运算符</th><th>含义</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td><code>&gt;</code></td><td>大于</td><td><code>35 &gt; 45</code></td><td><code>false</code></td></tr><tr><td><code>&lt;</code></td><td>小于</td><td><code>35 &lt; 45</code></td><td><code>true</code></td></tr><tr><td><code>==</code></td><td>等于</td><td><code>50 == 50</code></td><td><code>true</code></td></tr><tr><td><code>!=</code></td><td>不等于</td><td><code>50 != 50</code></td><td><code>false</code></td></tr><tr><td><code>&gt;=</code></td><td>大于等于</td><td><code>35 &gt;= 45</code></td><td><code>false</code></td></tr><tr><td><code>&lt;=</code></td><td>小于等于</td><td><code>35 &lt;= 45</code></td><td><code>true</code></td></tr></tbody></table><p><strong>代码示例</strong>：</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnInit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentPrice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> targetPrice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 大于判断  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isGreater </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentPrice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> targetPrice;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;价格大于目标价？&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isGreater);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：false  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 小于判断  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isLesser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentPrice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> targetPrice;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;价格小于目标价？&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isLesser);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：false  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 等于判断（注意是双等号！）  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isEqual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentPrice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> targetPrice;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;价格等于目标价？&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isEqual);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：true  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 不等于判断  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isNotEqual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentPrice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> targetPrice;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;价格不等于目标价？&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isNotEqual);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：false  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>注意事项</strong>：</p><ul><li><strong>双等号<code>==</code></strong>：区分赋值号<code>=</code>（如<code>a = 5</code>是赋值，<code>a == 5</code>是判断相等）。</li><li><strong>浮点型比较</strong>：避免直接用<code>==</code>比较浮点型（因精度问题），改用差值判断（如<code>MathAbs(a - b) &lt; 0.0001</code>）。</li></ul><h2 id="三、逻辑表达式" tabindex="-1">三、逻辑表达式 <a class="header-anchor" href="#三、逻辑表达式" aria-label="Permalink to &quot;三、逻辑表达式&quot;">​</a></h2><p><strong>作用</strong>：组合多个布尔值，返回新的布尔值，常用于条件判断。<br><strong>核心运算符</strong>：</p><table tabindex="0"><thead><tr><th>运算符</th><th>含义</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td><code>&amp;&amp;</code></td><td>逻辑与（且）</td><td><code>(5 &gt; 3) &amp;&amp; (4 &lt; 6)</code></td><td><code>true</code></td></tr><tr><td><code>||</code></td><td>逻辑或（或）</td><td><code>(5 &gt; 3) || (4 &gt; 6)</code></td><td><code>true</code></td></tr><tr><td><code>!</code></td><td>逻辑非（取反）</td><td><code>!(5 &gt; 3)</code></td><td><code>false</code></td></tr></tbody></table><p><strong>代码示例</strong>：</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnInit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isUptrend </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 是否处于上升趋势  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isHighVolume </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 成交量是否高  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 逻辑与：同时满足两个条件才开仓  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> canBuy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isUptrend </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isHighVolume;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;可以买入吗？&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, canBuy);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：false（因isHighVolume为false）  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 逻辑或：满足任意条件则预警  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> needAlert </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isUptrend </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isHighVolume;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;需要预警吗？&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, needAlert);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：true（因isUptrend为true）  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 逻辑非：取反当前趋势状态  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isNotUptrend </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">isUptrend;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;非上升趋势吗？&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isNotUptrend);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 输出：false  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>逻辑运算规则</strong>：</p><ul><li><strong>与（&amp;&amp;）</strong>：全真为真，一假则假。</li><li><strong>或（||）</strong>：一真为真，全假则假。</li><li><strong>非（!）</strong>：真变假，假变真。</li></ul><h2 id="四、实战调试技巧" tabindex="-1">四、实战调试技巧 <a class="header-anchor" href="#四、实战调试技巧" aria-label="Permalink to &quot;四、实战调试技巧&quot;">​</a></h2><ol><li><p><strong>Print函数调试</strong>：</p><ul><li>在代码中插入<code>Print(&quot;信息：&quot;, 变量);</code>，结果会显示在MT5的<strong>专家日志</strong>中（路径：<code>查看→工具箱→专家</code>）。</li><li>替代<code>Alert()</code>避免频繁弹窗干扰，适合批量输出调试信息。</li></ul></li><li><p><strong>运算符优先级</strong>：</p><ul><li>记忆口诀：<strong>非→算术→关系→逻辑</strong>（如<code>!a &amp;&amp; b &gt; c</code>等价于<code>(!a) &amp;&amp; (b &gt; c)</code>）。</li><li>复杂逻辑建议用括号明确优先级，避免歧义。</li></ul></li></ol>`,25)]))}const g=i(h,[["render",l]]);export{o as __pageData,g as default};
