import{_ as i,c as n,aI as t,o as e}from"./chunks/framework.b7dag8kZ.js";const a="/images/mq5_programming_for_traders/MQL5-Programming-for-Traders-3-1.png",g=JSON.parse('{"title":"MQL向导与程序草稿","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/mq5_programming_for_traders/welcome/mql_wizard"}],["meta",{"property":"og:title","content":"MQL向导与程序草稿"}]]},"headers":[],"relativePath":"mq5_programming_for_traders/welcome/mql_wizard.md","filePath":"mq5_programming_for_traders/welcome/mql_wizard.md","lastUpdated":1745411614000}'),l={name:"mq5_programming_for_traders/welcome/mql_wizard.md"};function p(r,s,o,h,k,d){return e(),n("div",null,s[0]||(s[0]=[t('<h1 id="mql向导与程序草稿" tabindex="-1">MQL向导与程序草稿 <a class="header-anchor" href="#mql向导与程序草稿" aria-label="Permalink to &quot;MQL向导与程序草稿&quot;">​</a></h1><p>这里我们将介绍一个最简单的MQL程序，它实际上并不执行任何操作。目的是引导用户了解在编辑器中编写源代码、编译代码以及在终端中运行的完整流程。通过独立完成以下步骤，您将确信编程对普通用户来说也是可实现的，并开始适应MQL5程序的集成开发环境。这对于巩固所学知识始终是必要的。</p><h2 id="创建最简单的mql5脚本" tabindex="-1">创建最简单的MQL5脚本 <a class="header-anchor" href="#创建最简单的mql5脚本" aria-label="Permalink to &quot;创建最简单的MQL5脚本&quot;">​</a></h2><p>MQL5中最简单的程序类型是脚本(Script)。让我们通过MQL向导来创建脚本：</p><ol><li><p>​<strong>​启动MQL5向导​</strong>​<br> 通过菜单栏 <code>文件 -&gt; 新建</code> 打开向导。在第一步中选择&quot;Script&quot;类型，点击&quot;下一步&quot;：</p><p><img src="'+a+'" alt="创建脚本步骤1"></p></li><li><p>​<strong>​配置脚本属性​</strong>​<br> 在&quot;名称&quot;字段中输入脚本路径。例如使用默认文件夹添加<code>Scripts\\Hello</code>，点击&quot;完成&quot;：</p><p><img src="'+a+`" alt="创建脚本步骤2"></p></li></ol><h2 id="文件结构解析" tabindex="-1">文件结构解析 <a class="header-anchor" href="#文件结构解析" aria-label="Permalink to &quot;文件结构解析&quot;">​</a></h2><p>向导会自动生成<code>Hello.mq5</code>文件，并存储在<code>MQL5/Scripts</code>目录。若指定子路径如<code>Scripts\\Exercise\\Hello</code>，系统会自动创建对应子文件夹。</p><blockquote><p>本书所有示例都存储在<code>MQL5Book</code>目录下，避免与用户现有程序产生命名冲突。例如示例文件路径为<code>MQL5\\Scripts\\MQL5Book\\p1\\Hello.mq5</code>，其中p1表示对应第一部分内容。</p></blockquote><p>生成的脚本模板如下：</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//+------------------------------------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//|                                                        Hello.mq5 |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//|                                  Copyright 2021, MetaQuotes Ltd. |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//|                                             https://www.mql5.com |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//+------------------------------------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#property copyright </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Copyright 2021, MetaQuotes Ltd.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#property link      </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.mql5.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#property version   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.00&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//+------------------------------------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//| Script程序启动函数                                               |</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//+------------------------------------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//+------------------------------------------------------------------+</span></span></code></pre></div>`,10)]))}const m=i(l,[["render",p]]);export{g as __pageData,m as default};
