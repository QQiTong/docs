import{_ as e}from"./chunks/new_icon.CP--apCK.js";import{_ as a}from"./chunks/compile_icon.BdBG-A29.js";import{_ as r,a as o}from"./chunks/stop_debug_icon.BOp5tkUU.js";import{_ as m}from"./chunks/terminal_icon.C19uVk9z.js";import{_ as p,c as i,ag as _,o as l}from"./chunks/framework.CCnnzLsu.js";const s="/metaeditor/example_wizard_script.png",d="/metaeditor/example_compile.png",n="/metaeditor/example_start_debug.png",c="/metaeditor/example_debug.png",T=JSON.parse('{"title":"程序开发示例","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/metaeditor/other/project_example"}],["meta",{"property":"og:title","content":"程序开发示例"}]]},"headers":[],"relativePath":"metaeditor/other/project_example.md","filePath":"metaeditor/other/project_example.md","lastUpdated":1744293048000}'),u={name:"metaeditor/other/project_example.md"};function f(h,t,g,q,x,b){return l(),i("div",null,t[0]||(t[0]=[_('<h1 id="程序开发示例" tabindex="-1">程序开发示例 <a class="header-anchor" href="#程序开发示例" aria-label="Permalink to &quot;程序开发示例&quot;">​</a></h1><p>感谢 <a href="/metaeditor/mql5_wizard/">MQL4/MQL5 向导</a>, 您只需要几分钟就可以创建一个简单的程序。 当前示例将在平台日志中显示 &quot;Hello World&quot; 条目。</p><p>启动 MQL4/MQL5 向导，可使用<img src="'+e+'" alt="新建"> 位于 <a href="/metaeditor/main_menu/main_menu_file">文件</a> 菜单或 <a href="/metaeditor/toolbar/toolbar_standard">标准</a> 工具栏里的新建命令。 在第一步中设置程序类型为脚本。</p><p><img src="'+s+'" alt="在向导中创建一个脚本"></p><p>接下来，设置脚本名称。 如果您打算在单独的子文件夹而非脚本根目录中创建脚本文件，请在名称字段中添加文件夹名称。 例如, &quot;Scripts\\Script Example\\Script Example&quot;。 单击完成后，将在 &quot;Scripts\\Script Example&quot; 目录中生成 &quot;Script Example.mq5&quot; 脚本文件。</p><p>将 &quot;Print(&quot;Hello World!);&quot; 字符串添加到生成的文件里并保存修改 (Ctrl+S)。 执行编译将初始文件转换为可在交易平台中启动的文件。 点击<img src="'+a+'" alt="编译"> 位于 <a href="/metaeditor/main_menu/main_menu_file#save">文件</a> 菜单或 <a href="/metaeditor/toolbar/toolbar_standard">工具栏</a> 里的编译。 编译结果显示在工具箱窗口的 <a href="/metaeditor/workspace/toolbox#errors">错误</a> 选卡中:</p><p><img src="'+d+'" alt="脚本编译"></p><p>编译的结果，ScriptExample.ex5 可执行脚本文件在源文件所在的同一目录中创建。</p><p>在 <a href="/metaeditor/development/debug">调试模式</a> 中您能够逐步检验程序的执行状况。 若有必要, 设置 <a href="/metaeditor/development/debug#breakpoint">断点</a> ― 字符串/函数, 程序暂停执行的所在。 为此，请所需行的左侧双击鼠标左键。 然后单击 &quot;<img src="'+r+'" alt="开始调试"> 位于 <a href="/metaeditor/main_menu/main_menu_debug#start">调试</a> 菜单或 <a href="/metaeditor/toolbar/toolbar_standard">工具栏</a> 里的开始调试。</p><p><img src="'+n+'" alt="启动调试"></p><p>脚本在交易平台的临时图表上启动，脚本运行结果 ― &quot;Hello World!&quot; 条目 出现在智能系统日志里:</p><p><img src="'+c+'" alt="调试脚本"></p><p>若要完成调试，请按 &quot;<img src="'+o+'" alt="停止调试">停止调试&quot;。</p><p>完成所有步骤后，您可以在交易平台上运行脚本。 若要打开它，点击<img src="'+m+'" alt="交易终端"> 位于 <a href="/metaeditor/main_menu/main_menu_tools">工具</a>菜单里的交易终端，或按 F4。</p>',14)]))}const j=p(u,[["render",f]]);export{T as __pageData,j as default};
