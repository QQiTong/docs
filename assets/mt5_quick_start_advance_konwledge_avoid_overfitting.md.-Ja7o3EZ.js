import{_ as t,c as r,ag as o,o as i}from"./chunks/framework.CCnnzLsu.js";const e="/assets/overfitting1.HreayC6h.png",l="/assets/overfitting2.8CRTg6pG.png",n="/assets/overfitting3.7wISXEjk.png",s="/assets/overfitting4.CZi7o9KH.png",f=JSON.parse('{"title":"如何避免过度拟合-维度诅咒","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/mt5_quick_start/advance_konwledge/avoid_overfitting"}],["meta",{"property":"og:title","content":"如何避免过度拟合-维度诅咒"}]]},"headers":[],"relativePath":"mt5_quick_start/advance_konwledge/avoid_overfitting.md","filePath":"mt5_quick_start/advance_konwledge/avoid_overfitting.md","lastUpdated":1745411614000}'),h={name:"mt5_quick_start/advance_konwledge/avoid_overfitting.md"};function g(d,a,c,_,u,p){return i(),r("div",null,a[0]||(a[0]=[o('<h1 id="如何避免过度拟合-维度诅咒" tabindex="-1">如何避免过度拟合-维度诅咒 <a class="header-anchor" href="#如何避免过度拟合-维度诅咒" aria-label="Permalink to &quot;如何避免过度拟合-维度诅咒&quot;">​</a></h1><h2 id="一、过度拟合的定义" tabindex="-1">一、过度拟合的定义 <a class="header-anchor" href="#一、过度拟合的定义" aria-label="Permalink to &quot;一、过度拟合的定义&quot;">​</a></h2><p>什么是过度拟合？它是指模型过于紧密或精确地匹配特定数据集，导致无法良好拟合其他数据或预测未来观察结果的现象。通俗来说，就像死记硬背历史考试题，遇到新题目却无法解答。</p><ul><li><strong>欠拟合</strong>：模型未能提取有效数据特征（如图1）。</li><li><strong>合理拟合</strong>：模型平衡拟合效果，无生硬匹配（如图2）。</li><li><strong>过度拟合</strong>：模型生硬迎合数据细节，泛化能力差（如图3）。</li></ul><p><img src="'+e+'" alt=""></p><h2 id="二、量化交易中的过度拟合问题" tabindex="-1">二、量化交易中的过度拟合问题 <a class="header-anchor" href="#二、量化交易中的过度拟合问题" aria-label="Permalink to &quot;二、量化交易中的过度拟合问题&quot;">​</a></h2><p>在量化策略研发中，参数优化的核心难点是避免过度拟合。以<strong>样本内（in-sample</strong>和<strong>样本外（out-of-sample</strong>测试为例：</p><h3 id="_1-样本内与样本外测试" tabindex="-1">1. 样本内与样本外测试 <a class="header-anchor" href="#_1-样本内与样本外测试" aria-label="Permalink to &quot;1. 样本内与样本外测试&quot;">​</a></h3><ul><li><strong>样本内数据</strong>：用于策略初步测试和参数优化（“学习数据”）。</li><li><strong>样本外数据</strong>：验证优化后的参数在新数据上的表现（“测试数据”）。<br><strong>示例</strong>：将2012-2017年数据作为样本内进行参数优化，2018-2023年数据作为样本外验证策略表现。</li></ul><p><img src="'+l+'" alt=""></p><h2 id="三、参数优化的关键要点" tabindex="-1">三、参数优化的关键要点 <a class="header-anchor" href="#三、参数优化的关键要点" aria-label="Permalink to &quot;三、参数优化的关键要点&quot;">​</a></h2><h3 id="一-优化参数的选择" tabindex="-1">（一）优化参数的选择 <a class="header-anchor" href="#一-优化参数的选择" aria-label="Permalink to &quot;（一）优化参数的选择&quot;">​</a></h3><h4 id="_1-参数范围需符合策略逻辑" tabindex="-1">1. <strong>参数范围需符合策略逻辑</strong> <a class="header-anchor" href="#_1-参数范围需符合策略逻辑" aria-label="Permalink to &quot;1. **参数范围需符合策略逻辑**&quot;">​</a></h4><p>参数范围应基于策略的理论基础，覆盖目标行情。</p><ul><li><strong>案例</strong>：斐波那契回撤策略的参数范围应围绕0.382、0.5、0.618等合理水平，而非盲目扩大至1.5、2.5等脱离策略逻辑的数值。</li><li><strong>原则</strong>：不属于策略目标的行情段应舍弃，避免选出参数孤岛。</li></ul><p><img src="'+n+'" alt=""></p><h4 id="_2-步长设置避免过细" tabindex="-1">2. <strong>步长设置避免过细</strong> <a class="header-anchor" href="#_2-步长设置避免过细" aria-label="Permalink to &quot;2. **步长设置避免过细**&quot;">​</a></h4><p>步长过小会使模型过度迎合历史数据细节，增加过拟合风险。</p><ul><li><strong>案例</strong>：布林带参数从10开始，步长设为10（10, 20, 30…）优于步长1（10, 11, 12…），后者易陷入“数据凹合”。</li></ul><h4 id="_3-控制可优化参数的数量-自由度" tabindex="-1">3. <strong>控制可优化参数的数量（自由度）</strong> <a class="header-anchor" href="#_3-控制可优化参数的数量-自由度" aria-label="Permalink to &quot;3. **控制可优化参数的数量（自由度）**&quot;">​</a></h4><ul><li><strong>维数诅咒</strong>：参数过多（高自由度）会导致信息稀疏，模型仅拟合局部数据，泛化能力差。</li><li><strong>建议</strong>：最多优化3-5个参数，避免一次性优化超过5个参数。简单策略往往更稳健。</li></ul><h3 id="二-优化结果的评估方法" tabindex="-1">（二）优化结果的评估方法 <a class="header-anchor" href="#二-优化结果的评估方法" aria-label="Permalink to &quot;（二）优化结果的评估方法&quot;">​</a></h3><h4 id="_1-样本内与样本外分段测试" tabindex="-1">1. 样本内与样本外分段测试 <a class="header-anchor" href="#_1-样本内与样本外分段测试" aria-label="Permalink to &quot;1. 样本内与样本外分段测试&quot;">​</a></h4><ul><li><strong>步骤</strong>： <ol><li>划分数据：如2012-2017年（样本内训练），2018-2023年（样本外测试）。</li><li>市场扫描：通过评价函数（如“采收率”=利润/最大回撤）筛选有效参数。</li><li>验证标准：样本外表现需达到合理阈值（如采收率随样本内年份增加而递增，6年数据要求采收率&gt;3）。</li></ol></li></ul><h4 id="_2-三数据集划分-进阶方法" tabindex="-1">2. 三数据集划分（进阶方法） <a class="header-anchor" href="#_2-三数据集划分-进阶方法" aria-label="Permalink to &quot;2. 三数据集划分（进阶方法）&quot;">​</a></h4><ul><li><strong>训练集</strong>：用于策略开发和初步参数优化。</li><li><strong>验证集</strong>：模拟实盘前的缓冲测试，避免过度依赖单一测试集。</li><li><strong>测试集</strong>：最终验证策略泛化能力。<br><strong>示例</strong>：假设当前是2024年，用2012-2017年（训练集）、2018-2021年（验证集）、2022-2023年（测试集）分阶段验证。</li></ul><p><img src="'+s+'" alt=""></p><h2 id="四、总结" tabindex="-1">四、总结 <a class="header-anchor" href="#四、总结" aria-label="Permalink to &quot;四、总结&quot;">​</a></h2><p>实战中 按照 样本内与样本外测试 比 三数据集更快,这样效率更高,能省出时间开发更多的策略, 同时配合一下4点即可</p><ul><li>样本量要大</li><li>参数范围合理</li><li>步长不要太小</li><li>参数数量不超过3个</li></ul>',30)]))}const q=t(h,[["render",g]]);export{f as __pageData,q as default};
