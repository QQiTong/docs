import{_ as l,c as k,aI as n,j as a,a as i,G as t,w as h,B as e,o as d}from"./chunks/framework.b7dag8kZ.js";const A=JSON.parse('{"title":"图表操作","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/mq5_programming_for_traders/creating_application_programs/working_with_charts"}],["meta",{"property":"og:title","content":"图表操作"}]]},"headers":[],"relativePath":"mq5_programming_for_traders/creating_application_programs/working_with_charts.md","filePath":"mq5_programming_for_traders/creating_application_programs/working_with_charts.md","lastUpdated":1744557359000}'),E={name:"mq5_programming_for_traders/creating_application_programs/working_with_charts.md"};function r(g,s,c,o,y,F){const p=e("tag");return d(),k("div",null,[s[12]||(s[12]=n("",420)),a("p",null,[s[1]||(s[1]=i("在")),s[2]||(s[2]=a("code",null,"read",-1)),s[3]||(s[3]=i("方法中，我们逐行读取并解析文件。如果是“")),t(p,null,{default:h(()=>s[0]||(s[0]=[i("”形式的开始标签，我们创建一个新的容器对象并在其中继续读取。如果是具有相同名称的“")])),_:1}),s[4]||(s[4]=i("”形式的结束标签，我们返回成功标志（")),s[5]||(s[5]=a("code",null,"true",-1)),s[6]||(s[6]=i("），这意味着容器已生成。在其余行中，我们读取“键=值”对并将它们添加到属性数组中。"))]),s[13]||(s[13]=n("",24)),a("p",null,[s[8]||(s[8]=i("编辑完成后，需要将容器的内容写回到文件中（可以是同一个文件或不同的文件）。辅助方法 ")),s[9]||(s[9]=a("code",null,"save",-1)),s[10]||(s[10]=i(" 按照上述的 tpl 格式保存对象：以开始标签“")),t(p,null,{default:h(()=>s[7]||(s[7]=[i("”开头，接着写入所有的“键=值”属性，然后对嵌套对象调用 "),a("code",null,"save",-1),i(" 方法，最后以结束标签“")])),_:1}),s[11]||(s[11]=i("”结尾。保存时将文件描述符作为参数传入。"))]),s[14]||(s[14]=n("",42))])}const D=l(E,[["render",r]]);export{A as __pageData,D as default};
