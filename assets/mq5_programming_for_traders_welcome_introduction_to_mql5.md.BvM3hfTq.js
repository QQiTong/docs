import{_ as s,c as i,aI as t,o as e}from"./chunks/framework.b7dag8kZ.js";const c=JSON.parse('{"title":"MQL5简介与开发环境","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/mq5_programming_for_traders/welcome/introduction_to_mql5"}],["meta",{"property":"og:title","content":"MQL5简介与开发环境"}]]},"headers":[],"relativePath":"mq5_programming_for_traders/welcome/introduction_to_mql5.md","filePath":"mq5_programming_for_traders/welcome/introduction_to_mql5.md","lastUpdated":1744387121000}'),r={name:"mq5_programming_for_traders/welcome/introduction_to_mql5.md"};function l(n,a,h,o,d,p){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="mql5简介与开发环境" tabindex="-1">MQL5简介与开发环境 <a class="header-anchor" href="#mql5简介与开发环境" aria-label="Permalink to &quot;MQL5简介与开发环境&quot;">​</a></h1><h2 id="面向对象编程-oop-的革新" tabindex="-1">面向对象编程（OOP）的革新 <a class="header-anchor" href="#面向对象编程-oop-的革新" aria-label="Permalink to &quot;面向对象编程（OOP）的革新&quot;">​</a></h2><p>MQL5在MetaTrader 5中的重大革新之一是全面支持​<strong>​面向对象编程（OOP）​</strong>​概念。相较之下，前代MQL4（MetaTrader 4的编程语言）常被类比为C语言，而MQL5则更接近于C++。值得注意的是，当前MQL4已移植了MQL5的OOP特性，但对编程新手而言，OOP仍显复杂。</p><h2 id="本书目标" tabindex="-1">本书目标 <a class="header-anchor" href="#本书目标" aria-label="Permalink to &quot;本书目标&quot;">​</a></h2><p>本书旨在​<strong>​化繁为简​</strong>​，与官方<a href="https://www.mql5.com" target="_blank" rel="noreferrer">MQL5语言参考</a>形成互补。我们将循序渐进地讲解MQL5的编程要素，逐步展现OOP技术的强大潜力。开发者可根据任务需求自由选择编程范式——无论是面向对象风格、传统过程式编程，或是混合使用二者。</p><h2 id="读者群体" tabindex="-1">读者群体 <a class="header-anchor" href="#读者群体" aria-label="Permalink to &quot;读者群体&quot;">​</a></h2><h3 id="程序员群体" tabindex="-1">程序员群体 <a class="header-anchor" href="#程序员群体" aria-label="Permalink to &quot;程序员群体&quot;">​</a></h3><ul><li>已有编程经验者可直接跳过基础章节，专注学习MetaTrader 5的专用API</li><li>​<strong>​C++开发者优势明显​</strong>​：MQL5语法与C++高度相似（但需注意二者存在关键差异）</li></ul><h3 id="非程序员群体" tabindex="-1">非程序员群体 <a class="header-anchor" href="#非程序员群体" aria-label="Permalink to &quot;非程序员群体&quot;">​</a></h3><ul><li>建议按章节顺序系统学习</li><li>特别适合希望通过MQL5定制交易策略的纯交易员</li></ul><h2 id="metatrader-5的功能扩展" tabindex="-1">MetaTrader 5的功能扩展 <a class="header-anchor" href="#metatrader-5的功能扩展" aria-label="Permalink to &quot;MetaTrader 5的功能扩展&quot;">​</a></h2><p>平台通过MQL5提供丰富的功能接口：</p><ul><li>📊 技术分析</li><li>📈 自动化交易</li><li>🔄 外部数据源集成</li></ul><h2 id="mql5程序类型" tabindex="-1">MQL5程序类型 <a class="header-anchor" href="#mql5程序类型" aria-label="Permalink to &quot;MQL5程序类型&quot;">​</a></h2><table tabindex="0"><thead><tr><th>类型</th><th>功能描述</th></tr></thead><tbody><tr><td>​<strong>​指标​</strong>​</td><td>基于报价数据计算并可视化技术指标</td></tr><tr><td>​<strong>​智能交易系统（EA）​</strong>​</td><td>全自动/半自动化交易程序</td></tr><tr><td>​<strong>​脚本​</strong>​</td><td>单次执行特定操作的快捷工具</td></tr><tr><td>​<strong>​服务​</strong>​</td><td>后台持续运行的守护程序（无需绑定图表）</td></tr></tbody></table><h2 id="开发环境与文件结构" tabindex="-1">开发环境与文件结构 <a class="header-anchor" href="#开发环境与文件结构" aria-label="Permalink to &quot;开发环境与文件结构&quot;">​</a></h2><h3 id="执行架构" tabindex="-1">执行架构 <a class="header-anchor" href="#执行架构" aria-label="Permalink to &quot;执行架构&quot;">​</a></h3><ul><li>所有控制逻辑运行于​<strong>​客户端终端​</strong>​</li><li>需保持与服务器的实时连接（多数程序依赖网络通信）</li><li>服务器仅处理订单，不部署任何MQL程序</li></ul><h3 id="文件目录" tabindex="-1">文件目录 <a class="header-anchor" href="#文件目录" aria-label="Permalink to &quot;文件目录&quot;">​</a></h3><p>终端的工作目录结构示例：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows典型路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">C:/Program</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Files/MetaTrader</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">C:/Users/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;用户名&gt;/AppData/Roaming/MetaQuotes/Terminal/&lt;实例ID&gt;/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># MQL5子目录结构</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/MQL5/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Indicators/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 指标文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Experts/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 智能交易系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Scripts/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 脚本文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Services/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 服务程序</span></span></code></pre></div><p>快速访问方式</p><p>通过终端菜单 文件 -&gt; 打开数据文件夹 可直达工作目录。使用内置的​​MQL向导​​（文件 -&gt; 新建）可自动生成各类程序的代码模板，并存入正确位置。</p>`,23)]))}const g=s(r,[["render",l]]);export{c as __pageData,g as default};
