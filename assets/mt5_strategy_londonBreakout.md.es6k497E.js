import{_ as i,c as a,aI as h,o as n}from"./chunks/framework.b7dag8kZ.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/mt5_strategy/londonBreakout"}],["meta",{"property":"og:title","content":""}]]},"headers":[],"relativePath":"mt5_strategy/londonBreakout.md","filePath":"mt5_strategy/londonBreakout.md","lastUpdated":1746376832000}'),t={name:"mt5_strategy/londonBreakout.md"};function l(e,s,k,p,r,d){return n(),a("div",null,s[0]||(s[0]=[h(`<h3 id="_33-教学ea-londonbreakout-枚举-结构体图表对象-原文" tabindex="-1">33. 教学EA-LondonBreakout-枚举 结构体图表对象_原文 <a class="header-anchor" href="#_33-教学ea-londonbreakout-枚举-结构体图表对象-原文" aria-label="Permalink to &quot;33. 教学EA-LondonBreakout-枚举 结构体图表对象_原文&quot;">​</a></h3><p>2025年04月17日 21:58</p><h4 id="一、伦敦突破策略概述" tabindex="-1">一、伦敦突破策略概述 <a class="header-anchor" href="#一、伦敦突破策略概述" aria-label="Permalink to &quot;一、伦敦突破策略概述&quot;">​</a></h4><p>今天解析的策略是<strong>伦敦突破法</strong>，其核心是基于特定时间段（如伦敦市场开盘时间）而非价格行为或指标。具体规则：</p><ol><li>设定时间区域的开始和结束时间，统计该时段内的最高价和最低价。</li><li>等待价格突破最高价或最低价后开仓。</li><li>设定最终平仓时间，到达时间后强制平仓，无论盈亏。</li></ol><h4 id="二、代码解析核心知识点" tabindex="-1">二、代码解析核心知识点 <a class="header-anchor" href="#二、代码解析核心知识点" aria-label="Permalink to &quot;二、代码解析核心知识点&quot;">​</a></h4><p>本次涉及的新知识点：<strong>枚举类型、结构体、构造函数、图表对象绘制</strong>。</p><h5 id="_1-枚举类型-enum" tabindex="-1">1. 枚举类型（Enum） <a class="header-anchor" href="#_1-枚举类型-enum" aria-label="Permalink to &quot;1. 枚举类型（Enum）&quot;">​</a></h5><ul><li><strong>作用</strong>：表示一组相关常量，提高代码可读性。</li><li><strong>示例</strong>：<div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BreakoutMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    OneSingle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 单边突破  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    TwoSingles</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 双边突破  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div></li><li><strong>优势</strong>：相比直接使用整数（如0/1），枚举值更直观，便于维护。</li></ul><h5 id="_2-结构体-struct" tabindex="-1">2. 结构体（Struct） <a class="header-anchor" href="#_2-结构体-struct" aria-label="Permalink to &quot;2. 结构体（Struct）&quot;">​</a></h5><ul><li><strong>作用</strong>：封装不同类型的变量为一个自定义数据类型。</li><li><strong>示例</strong>：<div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TimeRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    datetime startTime;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 时间区域开始时间  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    datetime endTime;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // 时间区域结束时间  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    datetime closeTime;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 平仓时间  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> high;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // 区域内最高价  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> low;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               // 区域内最低价  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inRange;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             // 当前是否在时间区域内  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> highBreakout;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 是否突破高价  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lowBreakout;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // 是否突破低价  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 构造函数：初始化成员变量  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    TimeRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">endTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closeTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">high</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">low</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                  inRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">highBreakout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lowBreakout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {}  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div></li><li><strong>使用</strong>：通过<code>.</code>访问成员，如<code>range.startTime = ...</code>。</li></ul><h4 id="三、参数配置与时间计算" tabindex="-1">三、参数配置与时间计算 <a class="header-anchor" href="#三、参数配置与时间计算" aria-label="Permalink to &quot;三、参数配置与时间计算&quot;">​</a></h4><ol><li><p><strong>外部输入参数</strong>：</p><ul><li><code>stopLoss</code>/<code>takeProfit</code>：止损/止盈百分比（基于区间点数）。</li><li><code>rangeStart</code>：时间区域开始时间（分钟，如540=9:00）。</li><li><code>duration</code>：时间区域持续时长（分钟）。</li><li><code>closeTime</code>：最终平仓时间（分钟），-1表示无固定平仓时间。</li><li><code>breakoutMode</code>：突破模式（枚举类型：单边/双边）。</li></ul></li><li><p><strong>时间计算逻辑</strong>：</p><ul><li>将分钟转换为UNIX时间戳，处理周末闭市和用户设定的交易周过滤（如仅周一至周五交易）。</li><li>确保结束时间和平仓时间在合理范围内（不超过24小时）。</li></ul></li></ol><h4 id="四、图表对象绘制" tabindex="-1">四、图表对象绘制 <a class="header-anchor" href="#四、图表对象绘制" aria-label="Permalink to &quot;四、图表对象绘制&quot;">​</a></h4><p>通过MetaTrader 5的API绘制可视化元素，如时间区域、高低价线、平仓时间线。</p><h5 id="_1-绘制矩形区域-绿色箱体" tabindex="-1">1. 绘制矩形区域（绿色箱体） <a class="header-anchor" href="#_1-绘制矩形区域-绿色箱体" aria-label="Permalink to &quot;1. 绘制矩形区域（绿色箱体）&quot;">​</a></h5><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建唯一对象名  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string objName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;OBG_K_&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ObjectCreate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, objName, OBJ_RECTANGLE, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, startTime, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, endTime, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ObjectSetInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, objName, OBJPROP_COLOR, ColorSeaGreen);  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ObjectSetInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, objName, OBJPROP_FILL, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h5 id="_2-绘制高低价虚线" tabindex="-1">2. 绘制高低价虚线 <a class="header-anchor" href="#_2-绘制高低价虚线" aria-label="Permalink to &quot;2. 绘制高低价虚线&quot;">​</a></h5><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 高价线（趋势线）  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string highLineName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;OBG_HL_&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ObjectCreate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, highLineName, OBJ_TREND, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, startTime, high, endTime, high);  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ObjectSetInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, highLineName, OBJPROP_COLOR, ColorRed);  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ObjectSetInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, highLineName, OBJPROP_STYLE, STYLE_DOT);</span></span></code></pre></div><h5 id="_3-绘制平仓时间垂直线" tabindex="-1">3. 绘制平仓时间垂直线 <a class="header-anchor" href="#_3-绘制平仓时间垂直线" aria-label="Permalink to &quot;3. 绘制平仓时间垂直线&quot;">​</a></h5><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string closeLineName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;OBG_VL_&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ObjectCreate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, closeLineName, OBJ_VERTICAL, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, closeTime, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, closeTime, High[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ObjectSetInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, closeLineName, OBJPROP_COLOR, ColorPink);</span></span></code></pre></div><h4 id="五、订单处理与平仓逻辑" tabindex="-1">五、订单处理与平仓逻辑 <a class="header-anchor" href="#五、订单处理与平仓逻辑" aria-label="Permalink to &quot;五、订单处理与平仓逻辑&quot;">​</a></h4><ol><li><p><strong>突破判断</strong>：</p><ul><li>检测价格是否突破时间区域的高价（<code>highBreakout</code>）或低价（<code>lowBreakout</code>）。</li><li>根据突破模式（单边/双边）决定是否开多单、空单或两者。</li></ul></li><li><p><strong>强制平仓</strong>：</p><ul><li>到达<code>closeTime</code>时，遍历所有持仓订单，通过订单备注（包含平仓时间）判断是否关闭。</li></ul><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string comment </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PositionGetString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(POSITION_COMMENT);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string closeTimeStr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StringSplit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(comment, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 解析备注中的平仓时间  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> closeTimeStr) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PositionClose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li></ol><h4 id="六、代码结构与优化" tabindex="-1">六、代码结构与优化 <a class="header-anchor" href="#六、代码结构与优化" aria-label="Permalink to &quot;六、代码结构与优化&quot;">​</a></h4><ul><li><strong>输入检查</strong>：确保时间参数合法（如<code>rangeStart</code>在0-1440分钟之间，<code>closeTime</code>不早于<code>endTime</code>）。</li><li><strong>代码复用</strong>：通过构造函数初始化结构体，避免手动赋值，提高一致性。</li><li><strong>可维护性</strong>：枚举和结构体清晰定义业务逻辑，图表对象命名唯一化避免冲突。</li></ul><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4><p>伦敦突破策略逻辑简单，但代码实现涉及时间计算、图表绘制和订单管理等细节。通过枚举和结构体封装业务数据，结合图表可视化，可清晰呈现策略逻辑。建议逐步学习各模块，重点掌握自定义数据类型和图表API的使用。</p>`,27)]))}const o=i(t,[["render",l]]);export{g as __pageData,o as default};
